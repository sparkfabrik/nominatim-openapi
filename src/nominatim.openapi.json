{
    "openapi": "3.1.0",
    "info": {
        "title": "OpenStreetMap Nominatim API",
        "version": "4.2.3",
        "description": "OpenStreetMap Nominatim API v4.2.3\n\nNeed some help?\n[nominatim.org](https://nominatim.org/)",
        "termsOfService": "https://operations.osmfoundation.org/policies/nominatim/",
        "contact": {
            "url": "https://github.com/osm-search/Nominatim/issues"
        }
    },
    "servers": [
        {
            "url": "https://nominatim.openstreetmap.org"
        },
        {
            "url": "http://localhost:{port}",
            "variables": {
                "port": {
                    "default": "80"
                }
            }
        }
    ],
    "paths": {
        "/search": {
            "get": {
                "summary": "Look up a location from a textual description or address",
                "operationId": "search",
                "description": "Returns a list of locations.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "q",
                        "description": "Free-form query string to search for. Free-form queries are processed first left-to-right and then right-to-left if that fails. Commas are optional, but improve performance by reducing the complexity of the search."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "amenity",
                        "description": "Name and/or type of POI. Do not combine with `q=<query>` parameter."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "street",
                        "description": "Name of street with optional housenumber. Do not combine with `q=<query>` parameter."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "city",
                        "description": "Name of city. Do not combine with `q=<query>` parameter."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "county",
                        "description": "Name of county. Do not combine with `q=<query>` parameter."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "state",
                        "description": "Name of state. Do not combine with `q=<query>` parameter."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "country",
                        "description": "Name of country. Do not combine with `q=<query>` parameter."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "postalcode",
                        "description": "Postalcode. Do not combine with `q=<query>` parameter."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json",
                                "jsonv2",
                                "geojson",
                                "geocodejson"
                            ],
                            "default": "geocodejson"
                        },
                        "in": "query",
                        "name": "format",
                        "description": "Format of response. See [Place Output Formats](https://nominatim.org/release-docs/develop/api/Output/) for details on each format. If not specified, it is equal to `jsonv2`."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "json_callback",
                        "description": "Wrap JSON output in a callback function (JSONP) i.e. <string>(<json>). Only has an effect for JSON output formats."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "maximum": 1,
                            "minimum": 0,
                            "default": 1
                        },
                        "in": "query",
                        "name": "addressdetails",
                        "description": "Include a breakdown of the address into elements."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "maximum": 1,
                            "minimum": 0
                        },
                        "in": "query",
                        "name": "extratags",
                        "description": "Include additional information in the result if available, e.g. wikipedia link, opening hours."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "maximum": 1,
                            "minimum": 0
                        },
                        "in": "query",
                        "name": "namedetails",
                        "description": "Include a list of alternative names in the results. These may include language variants, references, operator and brand."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "accept-language",
                        "description": "Preferred language order for showing search results, overrides the value specified in the [Accept-Language HTTP header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Language). Either use a standard RFC2616 accept-language string or a simple comma-separated list of language codes."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "countrycodes",
                        "description": "Limit search results to one or more countries. `<countrycode>` must be the [ISO 3166-1alpha2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code. Each place in Nominatim is assigned to one country code based on OSM country boundaries. In rare cases a place may not be in any country at all, for example, in international waters."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "exclude_place_ids",
                        "description": "If you do not want certain OSM objects to appear in the search result, give a comma separated list of the `place_ids` you want to skip. This can be used to retrieve additional search results. For example, if a previous query only returned a few results, then including those here would cause the search to return other, less accurate, matches (if possible)."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "maximum": 50,
                            "minimum": 1
                        },
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the number of returned results."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "viewbox",
                        "description": "The preferred area to find search results. Any two corner points of the box are accepted as long as they span a real box. In `viewbox=<x1>,<y1>,<x2>,<y2>` x is longitude, y is latitude."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "maximum": 1,
                            "minimum": 0
                        },
                        "in": "query",
                        "name": "bounded",
                        "description": "When a viewbox is given, restrict the result to items contained within that viewbox (see above). When `viewbox` and `bounded=1` are given, an amenity only search is allowed. Give the special keyword for the amenity in square brackets, e.g. `[pub]` and a selection of objects of this type is returned. There is no guarantee that the result is complete."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "maximum": 1,
                            "minimum": 0
                        },
                        "in": "query",
                        "name": "polygon_geojson",
                        "description": "Output geometry of results as a GeoJSON."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "maximum": 1,
                            "minimum": 0
                        },
                        "in": "query",
                        "name": "polygon_kml",
                        "description": "Output geometry of results as a KML."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "maximum": 1,
                            "minimum": 0
                        },
                        "in": "query",
                        "name": "polygon_svg",
                        "description": "Output geometry of results as a SVG."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "maximum": 1,
                            "minimum": 0
                        },
                        "in": "query",
                        "name": "polygon_text",
                        "description": "Output geometry of results as a WKT."
                    },
                    {
                        "schema": {
                            "type": "number",
                            "minimum": 0.0
                        },
                        "in": "query",
                        "name": "polygon_threshold",
                        "description": "Return a simplified version of the output geometry. The parameter is the tolerance in degrees with which the geometry may differ from the original geometry. Topology is preserved in the result."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "email"
                        },
                        "in": "query",
                        "name": "email",
                        "description": "If you are making large numbers of request please include an appropriate email address to identify your requests. See Nominatim's [Usage Policy](https://operations.osmfoundation.org/policies/nominatim/) for more details."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "maximum": 1,
                            "minimum": 0
                        },
                        "in": "query",
                        "name": "dedupe",
                        "description": "Sometimes you have several objects in OSM identifying the same place or object in reality. The simplest case is a street being split into many different OSM ways due to different characteristics. Nominatim will attempt to detect such duplicates and only return one match unless this parameter is set to 0."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "maximum": 1,
                            "minimum": 0
                        },
                        "in": "query",
                        "name": "debug",
                        "description": "Output assorted developer debug information. Data on internals of Nominatim's Search Loop logic, and SQL queries. The output is (rough) HTML format. This overrides the specified machine readable format."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OSMGeocodeJson"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Search"
                ]
            }
        },
        "/reverse": {
            "get": {
                "summary": "Generates an address from a coordinate given as latitude and longitude",
                "operationId": "reverse",
                "description": "Returns exactly one result or an error when the coordinate is in an area with no OSM data coverage.",
                "parameters": [
                    {
                        "schema": {
                            "type": "number",
                            "minimum": 0
                        },
                        "in": "query",
                        "name": "lat",
                        "description": "Latitude of a coordinate in WGS84 projection."
                    },
                    {
                        "schema": {
                            "type": "number",
                            "minimum": 0
                        },
                        "in": "query",
                        "name": "lon",
                        "description": "Longitude of a coordinate in WGS84 projection."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json",
                                "jsonv2",
                                "geojson",
                                "geocodejson"
                            ],
                            "default": "geocodejson"
                        },
                        "in": "query",
                        "name": "format",
                        "description": "Format of response. See [Place Output Formats](https://nominatim.org/release-docs/develop/api/Output/) for details on each format. If not specified, it is equal to `xml`."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "json_callback",
                        "description": "Wrap JSON output in a callback function (JSONP) i.e. <string>(<json>). Only has an effect for JSON output formats."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "maximum": 1,
                            "minimum": 0,
                            "default": 1
                        },
                        "in": "query",
                        "name": "addressdetails",
                        "description": "Include a breakdown of the address into elements."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "maximum": 1,
                            "minimum": 0
                        },
                        "in": "query",
                        "name": "extratags",
                        "description": "Include additional information in the result if available, e.g. wikipedia link, opening hours."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "maximum": 1,
                            "minimum": 0
                        },
                        "in": "query",
                        "name": "namedetails",
                        "description": "Include a list of alternative names in the results. These may include language variants, references, operator and brand."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "accept-language",
                        "description": "Preferred language order for showing search results, overrides the value specified in the [Accept-Language HTTP header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Language). Either use a standard RFC2616 accept-language string or a simple comma-separated list of language codes."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 18,
                            "default": 18
                        },
                        "in": "query",
                        "name": "zoom",
                        "description": "Level of detail required for the address. This is a number that corresponds roughly to the zoom level used in XYZ tile sources in frameworks like Leaflet.js, Openlayers etc. In terms of address details the zoom levels are as follows: 3) country, 5) state, 8) county, 10) city, 12) town / borough, 13) village / suburb, 14) neighbourhood, 15) any settlement, 16) major streets, 17) major and minor streets, 18) building"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "layer",
                        "description": "The layer filter allows to select places by themes, a comma-separated list of `address` (all places that make up an address: address points with house numbers, streets, inhabited places like suburbs, villages, cities, states, and administrative boundaries), `poi` (all points of interest like restaurants, shops, hotels but also less obvious features like recycling bins, guideposts or benches), `railway` (infrastructures like tracks), `natural` (feautures like rivers, lakes and mountains), `manmade` (catch-all for features not covered by the other layers)."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "maximum": 1,
                            "minimum": 0
                        },
                        "in": "query",
                        "name": "polygon_geojson",
                        "description": "Output geometry of results as a GeoJSON."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "maximum": 1,
                            "minimum": 0
                        },
                        "in": "query",
                        "name": "polygon_kml",
                        "description": "Output geometry of results as a KML."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "maximum": 1,
                            "minimum": 0
                        },
                        "in": "query",
                        "name": "polygon_svg",
                        "description": "Output geometry of results as a SVG."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "maximum": 1,
                            "minimum": 0
                        },
                        "in": "query",
                        "name": "polygon_text",
                        "description": "Output geometry of results as a WKT."
                    },
                    {
                        "schema": {
                            "type": "number",
                            "minimum": 0.0
                        },
                        "in": "query",
                        "name": "polygon_threshold",
                        "description": "Return a simplified version of the output geometry. The parameter is the tolerance in degrees with which the geometry may differ from the original geometry. Topology is preserved in the result."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "email"
                        },
                        "in": "query",
                        "name": "email",
                        "description": "If you are making large numbers of request please include an appropriate email address to identify your requests. See Nominatim's [Usage Policy](https://operations.osmfoundation.org/policies/nominatim/) for more details."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "maximum": 1,
                            "minimum": 0
                        },
                        "in": "query",
                        "name": "debug",
                        "description": "Output assorted developer debug information. Data on internals of Nominatim's Search Loop logic, and SQL queries. The output is (rough) HTML format. This overrides the specified machine readable format."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OSMGeocodeJson"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Reverse"
                ]
            }
        },
        "/lookup": {
            "get": {
                "summary": "Query the address and other details of one or multiple OSM objects like node, way or relation",
                "operationId": "lookup",
                "description": "Returns the details of an OSM object.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^([RWN][0-9]+,?)+$"
                        },
                        "in": "query",
                        "required": true,
                        "name": "osm_ids",
                        "description": "Comma-separated list of OSM ids each prefixed with its type, one of node(N), way(W) or relation(R). Up to 50 ids can be queried at the same time."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json",
                                "jsonv2",
                                "geojson",
                                "geocodejson"
                            ],
                            "default": "geocodejson"
                        },
                        "in": "query",
                        "name": "format",
                        "description": "Format of response. See [Place Output Formats](https://nominatim.org/release-docs/develop/api/Output/) for details on each format."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "json_callback",
                        "description": "Wrap JSON output in a callback function (JSONP) i.e. <string>(<json>). Only has an effect for JSON output formats."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "maximum": 1,
                            "minimum": 0,
                            "default": 1
                        },
                        "in": "query",
                        "name": "addressdetails",
                        "description": "Include a breakdown of the address into elements."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "maximum": 1,
                            "minimum": 0
                        },
                        "in": "query",
                        "name": "extratags",
                        "description": "Include additional information in the result if available, e.g. wikipedia link, opening hours."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "maximum": 1,
                            "minimum": 0
                        },
                        "in": "query",
                        "name": "namedetails",
                        "description": "Include a list of alternative names in the results. These may include language variants, references, operator and brand."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "accept-language",
                        "description": "Preferred language order for showing search results, overrides the value specified in the [Accept-Language HTTP header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Language). Either use a standard RFC2616 accept-language string or a simple comma-separated list of language codes."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "maximum": 1,
                            "minimum": 0
                        },
                        "in": "query",
                        "name": "polygon_geojson",
                        "description": "Output geometry of results as a GeoJSON."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "maximum": 1,
                            "minimum": 0
                        },
                        "in": "query",
                        "name": "polygon_kml",
                        "description": "Output geometry of results as a KML."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "maximum": 1,
                            "minimum": 0
                        },
                        "in": "query",
                        "name": "polygon_svg",
                        "description": "Output geometry of results as a SVG."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "maximum": 1,
                            "minimum": 0
                        },
                        "in": "query",
                        "name": "polygon_text",
                        "description": "Output geometry of results as a WKT."
                    },
                    {
                        "schema": {
                            "type": "number",
                            "minimum": 0.0
                        },
                        "in": "query",
                        "name": "polygon_threshold",
                        "description": "Return a simplified version of the output geometry. The parameter is the tolerance in degrees with which the geometry may differ from the original geometry. Topology is preserved in the result."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "email"
                        },
                        "in": "query",
                        "name": "email",
                        "description": "If you are making large numbers of request please include an appropriate email address to identify your requests. See Nominatim's [Usage Policy](https://operations.osmfoundation.org/policies/nominatim/) for more details."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "maximum": 1,
                            "minimum": 0
                        },
                        "in": "query",
                        "name": "debug",
                        "description": "Output assorted developer debug information. Data on internals of Nominatim's Search Loop logic, and SQL queries. The output is (rough) HTML format. This overrides the specified machine readable format."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OSMGeocodeJson"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Lookup"
                ]
            }
        },
        "/status": {
            "get": {
                "summary": "Report on the state of the service and database",
                "operationId": "status",
                "description": "Returns the state of the service.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "text",
                                "json"
                            ],
                            "default": "json"
                        },
                        "in": "query",
                        "name": "format",
                        "description": "Selects the output format. See [Status Output Formats](https://nominatim.org/release-docs/develop/api/Status/#output) for details on each format. If not specified, it is equal to `text`."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "If `format` is `json` always returns a HTTP code 200, when the status call could be executed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Status"
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "OSMGeocodeJson": {
                "allOf": [
                    {
                        "$ref": "https://raw.githubusercontent.com/geocoders/geocodejson-spec/master/draft/geocodejson.schema.json"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "features": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "properties": {
                                            "type": "object",
                                            "properties": {
                                                "geocoding": {
                                                    "type": "object",
                                                    "properties": {
                                                        "osm_type": {
                                                            "type": "string",
                                                            "examples": [
                                                                "node",
                                                                "way",
                                                                "relation"
                                                            ]
                                                        },
                                                        "osm_id": {
                                                            "type": "integer"
                                                        },
                                                        "osm_key": {
                                                            "type": "string",
                                                            "examples": [
                                                                "boundary",
                                                                "highway",
                                                                "amenity"
                                                            ]
                                                        },
                                                        "osm_value": {
                                                            "type": "string",
                                                            "examples": [
                                                                "residential",
                                                                "restaurant"
                                                            ]
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "Status": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "integer",
                        "minimum": 0,
                        "example": [0, 700]
                    },
                    "message": {
                        "type": "string",
                        "example": [
                            "OK",
                            "Database connection failed"
                        ]
                    },
                    "data_updated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "software_version": {
                        "$ref": "https://jenkin.dev/json-schema-bricks/semver.schema.min.json"
                    },
                    "database_version": {
                        "$ref": "https://jenkin.dev/json-schema-bricks/semver.schema.min.json"
                    }
                },
                "required": [
                    "status",
                    "message"
                ]
            }
        }
    }
}